<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Data Rendering Page for Location</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        #chart-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        canvas {
            max-width: 600px;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <h1>Weather Data for <%= location %></h1>
    <h2>Monthly Changes in Temperature and Precipitation:</h2>

    <div id="chart-container"></div>

    <script>
        const labels = ["January", "February", "March", "April", "May", "June", "July", 
            "August", "September", "October", "November", "December"
        ];

        const monthlyTemps = <%- JSON.stringify(weatherData.monthlyTemps) %>;
        const monthlyPrecip = <%- JSON.stringify(weatherData.monthlyPrecip) %>;

        const container = document.getElementById("chart-container");

        for (let i = 0; i < labels.length; i++) {
            // Create <h2> element
            const heading = document.createElement("h2");
            heading.textContent = labels[i]; // Set the text of <h2>

            // Create <canvas> element
            const canvas = document.createElement("canvas");
            canvas.id = labels[i]; // Set the id of <canvas>

            // Append <h2> and <canvas> to the container
            container.appendChild(heading);
            container.appendChild(canvas);

            const ctx = canvas.getContext('2d');

            // Initialize Chart.js instance
            new Chart(ctx, {
                type: 'bar', // Corrected type to a string
                data: {
                    labels: ["Temperature", "Precipitation"], // Combined labels
                    datasets: [
                        {
                            label: "Average Monthly Temperature",
                            data: [monthlyTemps[i]], // Temperature data
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1,
                        },
                        {
                            label: "Monthly Precipitation",
                            data: [monthlyPrecip[i]], // Precipitation data
                            backgroundColor: 'rgba(153, 102, 255, 0.2)',
                            borderColor: 'rgba(153, 102, 255, 1)',
                            borderWidth: 1,
                        }
                    ]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }
    </script>
</body>
</html>